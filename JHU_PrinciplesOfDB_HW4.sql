USE jhu_principlesofdb;

-- The EMP_DEP_FK does not accept default of a way for setting delete 
-- I am assuming it is due to no default value being specified
-- I chose to set this to NULL since that is how we are already handling Super_ssn as well
CREATE TABLE EMPLOYEE (
	Fname VARCHAR(15) NOT NULL,
    Minit CHAR,
    Lname VARCHAR(15) NOT NULL,
    Ssn CHAR(9) NOT NULL,
    Bdate DATE,
    Address VARCHAR(30),
    Sex CHAR,
    Salary DECIMAL(10, 2),
    Super_ssn CHAR(9),
    Dno INT NOT NULL,
    CONSTRAINT EMP_PK PRIMARY KEY (Ssn),
    CONSTRAINT EMP_SUPER_FK 
		FOREIGN KEY (Super_ssn) REFERENCES EMPLOYEE(Ssn)
		ON DELETE SET NULL ON UPDATE CASCADE
   -- Unable to set this foreign key reference without the department table being created
    #CONSTRAINT EMP_DEPT_FK 
		#FOREIGN KEY(Dno) REFERENCES DEPARTMENT(Dnumber)
		#ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE TABLE DEPARTMENT (
    Dname VARCHAR(15) NOT NULL,
    Dnumber INT NOT NULL,
    Mgr_ssn CHAR(9) NOT NULL DEFAULT '88866555',
    Mgr_start_date DATE,
    CONSTRAINT DEPT_PK PRIMARY KEY (Dnumber),
    CONSTRAINT DEPT_UK UNIQUE (Dname),
   # I set "ON DELETE SET DEFAULT" to "ON DELETE CASCADE"
    CONSTRAINT DEPT_MGR_FK 
		FOREIGN KEY (Mgr_ssn) REFERENCES EMPLOYEE (Ssn)
		ON DELETE CASCADE ON UPDATE CASCADE
);

-- Added foreign key reference in the EMPLOYEE table to the DEPARTMENT table
ALTER TABLE EMPLOYEE
ADD CONSTRAINT EMP_DEPT_FK 
		FOREIGN KEY(Dno) REFERENCES DEPARTMENT(Dnumber)
		ON DELETE CASCADE ON UPDATE CASCADE;

CREATE TABLE DEPT_LOCATIONS (
    Dnumber INT NOT NULL,
    Dlocation VARCHAR(15) NOT NULL,
    CONSTRAINT DEPT_LOCATIONS_PK 
		PRIMARY KEY (Dnumber , Dlocation),
	CONSTRAINT DEPT_LOCATIONS_DEPT_FK 
		FOREIGN KEY (Dnumber) REFERENCES DEPARTMENT (Dnumber)
		ON DELETE CASCADE ON UPDATE CASCADE
);       

CREATE TABLE PROJECT (
    Pname VARCHAR(15) NOT NULL,
    Pnumber INT NOT NULL,
    Plocation VARCHAR(15),
    Dnum INT NOT NULL,
    CONSTRAINT PROJECT_PK
		PRIMARY KEY (Pnumber),
	UNIQUE (Pname),
    CONSTRAINT PROJECT_DEPT_FK
		FOREIGN KEY (Dnum) REFERENCES DEPARTMENT (Dnumber)
);

CREATE TABLE WORKS_ON (
    Essn CHAR(9) NOT NULL,
    Pno INT NOT NULL,
    Hours DECIMAL(3, 1),
    CONSTRAINT WORKS_ON_PK
		PRIMARY KEY (Essn , Pno),
	CONSTRAINT WORKS_ON_EMP_FK
		FOREIGN KEY (Essn) REFERENCES EMPLOYEE (Ssn),
    CONSTRAINT WORKS_ON_PROJ_FK
		FOREIGN KEY (Pno) REFERENCES PROJECT (Pnumber)
);

CREATE TABLE DEPENDENT (
    Essn CHAR(9) NOT NULL,
    Dependent_name VARCHAR(15) NOT NULL,
    Sex CHAR,
    Bdate DATE,
    Relationship VARCHAR(8),
    CONSTRAINT DEPENDENT_PK
		PRIMARY KEY (Essn , Dependent_name),
    CONSTRAINT DEPENDENT_EMP_FK
		FOREIGN KEY (Essn) REFERENCES EMPLOYEE (Ssn)
);

#########################
## DMLs to INSERT Data ##
#########################
SET FOREIGN_KEY_CHECKS=1;

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES 
('John','B','Smith',123456789,'1965-01-09','731 Fondren, Houston, TX','M',30000,333445555,5);

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES
('Franklin','T','Wong',333445555,'1955-12-08','635 Voss, Houston, TX','M',40000,888665555,5); 

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES
('Alicia','J','Zelaya',999887777,'1968-01-19','3321 Castle, Spring','F',25000,987654321,4); 

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES 
('Jennifer','S','Wallace',987654321,'1941-06-20','291 Berry, Bellaire, TX','F',43000,888665555,4);

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES 
('Ramesh','K','Narayan',666884444,'1962-09-15','975 Fire Oak, Humble, TX','M',38000, 333445555,5);

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES 
('Joyce','A','English',453453453,'1972-07-31','5631 Rice Houston','F',25000,333445555,5);

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES
('Ahmad','V','Jabbar',987987987,'1969-03-29','980 Dallas, Houston','M',25000,987654321,4); 

INSERT INTO EMPLOYEE(FNAME, MINIT,LNAME,SSN,BDATE,ADDRESS,SEX,SALARY,SUPER_SSN,DNO) VALUES
('James','E','Borg',888665555,'1937-11-10','450 Stone, Houston, TX','M',55000,NULL,1); 

INSERT INTO DEPARTMENT(DNAME,DNUMBER,MGR_SSN,MGR_START_DATE) VALUES
('Research',5,333445555,'1988-05-22'); 

INSERT INTO DEPARTMENT(DNAME,DNUMBER,MGR_SSN,MGR_START_DATE) VALUES
('Headquarters',1,888665555,'1981-06-19'); 

INSERT INTO DEPARTMENT(DNAME,DNUMBER,MGR_SSN,MGR_START_DATE) VALUES
('Administration',4,987654321,'1995-01-01'); 

INSERT INTO DEPT_LOCATIONS(DNUMBER,DLOCATION) VALUES
(1,'Houston');

INSERT INTO DEPT_LOCATIONS(DNUMBER,DLOCATION) VALUES
(4,'Stafford');

INSERT INTO DEPT_LOCATIONS(DNUMBER,DLOCATION) VALUES
(5,'Bellaire');

-- This entry has the first value as blank, but DEPT_LOCATIONS DNUMBER attribute
-- can not be null, I input 5 into this query per what is shown on p. 162 in the book
INSERT INTO DEPT_LOCATIONS(DNUMBER,DLOCATION) VALUES
(5,'Sugarland');

INSERT INTO DEPT_LOCATIONS(DNUMBER,DLOCATION) VALUES
(5,'Houston');

INSERT INTO PROJECT(PNAME,PNUMBER,PLOCATION,DNUM) VALUES
('ProductX',1,'Bellaire',5);

INSERT INTO PROJECT(PNAME,PNUMBER,PLOCATION,DNUM) VALUES
('ProductY',2,'Sugarland',5);

INSERT INTO PROJECT(PNAME,PNUMBER,PLOCATION,DNUM) VALUES
('ProductZ',3,'Houston',5);

INSERT INTO PROJECT(PNAME,PNUMBER,PLOCATION,DNUM) VALUES
('Computerization',10,'Stafford',4);

INSERT INTO PROJECT(PNAME,PNUMBER,PLOCATION,DNUM) VALUES
('Reorganization',20,'Houston',1);

INSERT INTO PROJECT(PNAME,PNUMBER,PLOCATION,DNUM) VALUES
('Newbenefits',30,'Stafford',4);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(123456789,1,32.5);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(123456789,2,7.5);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(666884444,3,40);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(453453453,1,20);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(453453453,2,20);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(333445555,2,10);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(333445555,3,10);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(333445555,10,10);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(333445555,20,10);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(999887777,30,30);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(999887777,10,10);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(987987987,10,35);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(987987987,30,5);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(987654321,30,20);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(987654321,20,15);

INSERT INTO WORKS_ON(ESSN,PNO,HOURS) VALUES
(888665555,20,NULL);

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(123456789,'Alice','F','1988-12-30','Daughter'); 

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(123456789,'Elizabeth','F','1967-05-05','Spouse'); 

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(123456789,'Micheal','M','1988-01-04','Son'); 

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(333445555,'Alice','F','1986-04-05','Daughter'); 

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(333445555,'Joy','F','1958-05-03','Spouse'); 

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(333445555,'Theodore','M','1983-10-25','Son'); 

INSERT INTO DEPENDENT(ESSN,DEPENDENT_NAME,SEX,BDATE,RELATIONSHIP) VALUES
(987654321,'Abner','M','1942-02-28','Spouse'); 

#############################
## Query Question/Practice ##
#############################

-- Q: After you finish the first part above, demonstrate how the Division operation 
-- shown in Figure 8.8 (p. 256) works using the example: "Retrieve the SSNs of employees 
-- who work on all projects that John Smith works on" from the company database, using 
-- one SQL query statement that can retrieve the same results of the above example.

-- This result keeps Johns Social as well, we can get a result without johns social if we 
-- would like to by adding an additional portion to the WHERE clause that removes Johns social.
-- I opted to leave Johns social here.
SELECT WORKS_ON.ESSN, WORKS_ON.PNO
FROM WORKS_ON
JOIN EMPLOYEE ON EMPLOYEE.SSN = WORKS_ON.ESSN
WHERE WORKS_ON.PNO IN (
	SELECT PNO 
	FROM WORKS_ON
    JOIN EMPLOYEE ON EMPLOYEE.SSN = WORKS_ON.ESSN
    WHERE EMPLOYEE.FNAME = "John" AND EMPLOYEE.LNAME = "Smith");
    


